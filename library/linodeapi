#!/usr/bin/env python
# -*- coding: utf-8 -*-

# (c) 2013, akerl
# Written by akerl
#
# This module is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this software.  If not, see <http://www.gnu.org/licenses/>.

from linode.api import Api, ApiError

def main():
  module = AnsibleModule(
            argument_spec = dict(
              method        = dict(required=True),
            ),
            required_together = [['username','password']],
            required_one_of = [['username','apikey']],
            mutually_exclusive = [['apikey','password']],
            check_invalid_arguments=False,
          )
  params = module.params
  if 'apikey' in params:
    try:
      myApi = Api(params['apikey'])
    except ApiError:
      module.fail_json(msg='api key not accepted')
  else:
    myApi = Api()
    try:
      myApi.user_getapikey(username=params['username'], password=params['password'])
    except ApiError:
      module.fail_json(msg='credentials not accepted')

  #try:
  myApiCall = getattr(myApi, params['method'])
  #except AttributeError:
  #  module.fail_json(msg='invalid api method (should never happen)')

  callParams = params.copy()

  for item in {'username', 'password', 'apikey', 'method'}:
    if item in callParams:
      callParams.pop(item)

  try:
    myResult = myApiCall(**callParams)
  except ApiError as e:
    module.fail_json(msg='api call failed', **e.value[0])

  module.exit_json(changed=False, msg='api call succeeded', response=myResult)

# this is magic, see lib/ansible/module_common.py
#<<INCLUDE_ANSIBLE_MODULE_COMMON>>

main()

